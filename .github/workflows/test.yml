name: test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: latest
          args: "-c .github/.golangci.yml"

  unit-test:
    name: Unit Test
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.8'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: go mod download
      - name: unit test
        run: make unit-test

  integration-test:
    name: Integration Test
    runs-on: ubuntu-20.04
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v2
      - uses: helm/kind-action@v1.2.0
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.8'
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download Modules
        if: steps.cache.outputs.cache-hit != 'true'
        run: go mod download
      - name: integration test
        run: make integration-test
        env:
          USE_EXISTING_CLUSTER: true
          TEST_GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN_FOR_INTEGRATION_TEST }}
