// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/services/pullrequest.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	models "github.com/cloudnativedaysjp/reviewapp-operator/domain/models"
	utils "github.com/cloudnativedaysjp/reviewapp-operator/utils"
	gomock "github.com/golang/mock/gomock"
)

// MockPullRequestServiceIface is a mock of PullRequestServiceIface interface.
type MockPullRequestServiceIface struct {
	ctrl     *gomock.Controller
	recorder *MockPullRequestServiceIfaceMockRecorder
}

// MockPullRequestServiceIfaceMockRecorder is the mock recorder for MockPullRequestServiceIface.
type MockPullRequestServiceIfaceMockRecorder struct {
	mock *MockPullRequestServiceIface
}

// NewMockPullRequestServiceIface creates a new mock instance.
func NewMockPullRequestServiceIface(ctrl *gomock.Controller) *MockPullRequestServiceIface {
	mock := &MockPullRequestServiceIface{ctrl: ctrl}
	mock.recorder = &MockPullRequestServiceIfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPullRequestServiceIface) EXPECT() *MockPullRequestServiceIfaceMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockPullRequestServiceIface) Get(arg0 context.Context, arg1 models.ReviewApp, arg2 models.GitCredential, arg3 *utils.DatetimeFactory) (models.PullRequest, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(models.PullRequest)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockPullRequestServiceIfaceMockRecorder) Get(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPullRequestServiceIface)(nil).Get), arg0, arg1, arg2, arg3)
}
